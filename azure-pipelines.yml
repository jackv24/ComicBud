# Add steps that test, sign, and distribute an app, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/xamarin

trigger:
- master

pool:
  vmImage: 'macos-latest'

variables:
  buildConfiguration: 'Debug'
  outputDirectory: '$(build.binariesDirectory)/$(buildConfiguration)'

stages:
  - stage: Test
    jobs:
    - job: Shared
      steps:
        - task: DotNetCoreCLI@2
          inputs:
            command: 'test'
            projects: 'ComicWrap.Tests/ComicWrap.Tests.csproj'
            testRunTitle: 'Shared Test'
          env:
            Secret_AppSecret_Android: $(Secret_AppSecret_Android)
            Secret_AppSecret_iOS: $(Secret_AppSecret_iOS)

  - stage: Build
    jobs:
    - job: Android
      steps:
      - task: DownloadSecureFile@1
        name: keystore
        inputs:
          secureFile: 'comicwrap.keystore'
      - task: XamarinAndroid@1
        inputs:
          projectFile: 'ComicWrap/ComicWrap.Android/ComicWrap.Android.csproj'
          msbuildArguments: '-restore -t:SignAndroidPackage -p:AndroidPackageFormat=aab -p:AndroidKeyStore=True -p:AndroidSigningKeyStore=$(keystore.secureFilePath) -p:AndroidSigningStorePass=$(KeystorePassword) -p:AndroidSigningKeyAlias=$(KeystoreAlias) -p:AndroidSigningKeyPass=$(KeystorePassword)'
          jdkOption: 'JDKVersion'
          configuration: '$(buildConfiguration)'
          outputDirectory: '$(outputDirectory)'
        env:
            Secret_AppSecret_Android: $(Secret_AppSecret_Android)
            Secret_AppSecret_iOS: $(Secret_AppSecret_iOS)
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(build.binariesDirectory)/$(buildConfiguration)'
          ArtifactName: 'AndroidApk'
          publishLocation: 'Container'
    - job: iOS
      steps:
        - task: InstallAppleCertificate@2
          inputs:
            certSecureFile: 'Certificates.p12'
            keychain: 'temp'
        - task: InstallAppleProvisioningProfile@1
          inputs:
            provisioningProfileLocation: 'secureFiles'
            provProfileSecureFile: 'ComicWrap_Prod.mobileprovision'
        - task: NuGetCommand@2
          inputs:
            command: 'restore'
            restoreSolution: '**/*.sln'
            feedsToUse: 'select'
        - task: XamariniOS@2
          inputs:
            solutionFile: 'ComicWrap/ComicWrap.iOS/ComicWrap.iOS.csproj'
            configuration: '$(buildConfiguration)'
            packageApp: true
            runNugetRestore: false
          env:
            Secret_AppSecret_Android: $(Secret_AppSecret_Android)
            Secret_AppSecret_iOS: $(Secret_AppSecret_iOS)